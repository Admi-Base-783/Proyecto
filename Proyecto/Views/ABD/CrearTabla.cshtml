<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crear Tabla</title>
    <link rel="stylesheet" href="~/CSS/NewStyle.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #4F759B;
            margin: 0;
            padding: 0;
            color: #fff;
        }

        .container {
            max-width: 900px;
            margin: 30px auto;
            background: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }

        .form-section label {
            font-weight: bold;
            color: #555;
        }

        .btn-primary, .btn-secondary {
            font-size: 1rem;
            padding: 10px 20px;
        }

        .btn-secondary {
            background-color: #00bcd4;
            color: #fff;
        }

            .btn-secondary:hover {
                background-color: #0099b9;
            }

        .column-definition {
            background-color: #f9f9f9;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 15px;
        }

        button[type="submit"] {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 15px;
            border-radius: 5px;
            font-size: 1.2rem;
        }

            button[type="submit"]:hover {
                background-color: #45a049;
            }

        .foreign-key-settings {
            display: none;
            margin-top: 10px;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Crear Tabla</h1>
        <a href="@Url.Action("Opciones", "ABD")" class="btn btn-secondary">Anterior</a>

        @if (TempData["Message"] != null)
        {
            <div class="alert @(TempData["MessageType"] == "success" ? "alert-success" : "alert-danger")">
                <i class="@(TempData["MessageType"] == "success" ? "fas fa-check-circle" : "fas fa-exclamation-circle")"></i>
                @TempData["Message"]
            </div>
        }

        <form id="createTableForm" method="post" action="@Url.Action("CrearTablaDinamica", "ABD")">
            <div class="form-section">
                <label for="TableName">Nombre de la Tabla</label>
                <input type="text" id="TableName" name="TableName" placeholder="Ej: MiTabla" required />
            </div>

            <h2>Definición de Columnas</h2>
            <div id="columnsContainer" class="form-section">
                <div class="column-definition">
                    <label>Nombre de la Columna</label>
                    <input type="text" name="Columns[0].ColumnName" required />

                    <label>Tipo de Dato</label>
                    <select name="Columns[0].DataType">
                        <option value="INT">INT</option>
                        <option value="VARCHAR(255)">VARCHAR(255)</option>
                        <option value="DATE">DATE</option>
                        <option value="DECIMAL(18,2)">DECIMAL(18,2)</option>
                    </select>

                    <label>Permitir NULL</label>
                    <select name="Columns[0].AllowNull">
                        <option value="true">Sí</option>
                        <option value="false">No</option>
                    </select>

                    <label>Llave Primaria</label>
                    <select name="Columns[0].IsPrimaryKey">
                        <option value="true">Sí</option>
                        <option value="false" selected>No</option>
                    </select>

                    <label>Llave Secundaria</label>
                    <select name="Columns[0].IsForeignKey" class="is-foreign-key">
                        <option value="false" selected>No</option>
                        <option value="true">Sí</option>
                    </select>

                    <div class="foreign-key-settings">
                        <label>Tabla Referenciada</label>
                        <select name="Columns[0].ReferencedTable" class="referenced-table">
                            <option value="">Seleccione una tabla</option>
                            @foreach (var table in ViewBag.Tables as List<string>)
                            {
                                <option value="@table">@table</option>
                            }
                        </select>

                        <label>Columna Referenciada</label>
                        <input type="text" name="Columns[0].ReferencedColumn" placeholder="Ej: id" />
                    </div>

                    <label>Restricción (Opcional)</label>
                    <input type="text" name="Columns[0].Constraint" placeholder="Ej: DEFAULT 0" />
                </div>
            </div>

            <button type="button" id="addColumn" class="btn btn-secondary">Agregar Columna</button>
            <button type="submit" class="btn btn-primary">Crear Tabla</button>
        </form>
    </div>

    <script>
        document.getElementById('addColumn').addEventListener('click', function () {
            const container = document.getElementById('columnsContainer');
            const index = container.children.length;

            const newColumnHtml = `
                <div class="column-definition">
                    <label>Nombre de la Columna</label>
                    <input type="text" name="Columns[${index}].ColumnName" required />

                    <label>Tipo de Dato</label>
                    <select name="Columns[${index}].DataType">
                        <option value="INT">INT</option>
                        <option value="VARCHAR(255)">VARCHAR(255)</option>
                        <option value="DATE">DATE</option>
                        <option value="DECIMAL(18,2)">DECIMAL(18,2)</option>
                    </select>

                    <label>Permitir NULL</label>
                    <select name="Columns[${index}].AllowNull">
                        <option value="true">Sí</option>
                        <option value="false">No</option>
                    </select>

                    <label>Llave Primaria</label>
                    <select name="Columns[${index}].IsPrimaryKey">
                        <option value="true">Sí</option>
                        <option value="false" selected>No</option>
                    </select>

                    <label>Llave Secundaria</label>
                    <select name="Columns[${index}].IsForeignKey" class="is-foreign-key">
                        <option value="false" selected>No</option>
                        <option value="true">Sí</option>
                    </select>

                    <div class="foreign-key-settings">
                        <label>Tabla Referenciada</label>
                        <select name="Columns[${index}].ReferencedTable" class="referenced-table">
                            <option value="">Seleccione una tabla</option>
                            @foreach (var table in ViewBag.Tables as List<string>)
                            {
                                <option value="@table">@table</option>
                            }
                        </select>

                        <label>Columna Referenciada</label>
                        <input type="text" name="Columns[${index}].ReferencedColumn" placeholder="Ej: id" />
                    </div>

                    <label>Restricción (Opcional)</label>
                    <input type="text" name="Columns[${index}].Constraint" placeholder="Ej: DEFAULT 0" />
                </div>
            `;
            container.insertAdjacentHTML('beforeend', newColumnHtml);
        });

        document.getElementById('columnsContainer').addEventListener('change', function (event) {
            if (event.target.classList.contains('is-foreign-key')) {
                const parent = event.target.closest('.column-definition');
                const foreignKeySettings = parent.querySelector('.foreign-key-settings');
                foreignKeySettings.style.display = event.target.value === "true" ? "block" : "none";
            }
        });
    </script>
</body>
</html>

